---
# Source: retail-store-sample-ui-chart/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ui-ingress
  labels:
    helm.sh/chart: ui-1.1.0
    app.kubernetes.io/name: ui
    app.kubernetes.io/instance: ui
    app.kubernetes.io/component: service
    app.kubernetes.io/owner: retail-store-sample
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubernetes.io/ingress.class: "alb"
    alb.ingress.kubernetes.io/scheme: "internet-facing"
    alb.ingress.kubernetes.io/target-type: "ip"
    alb.ingress.kubernetes.io/healthcheck-path: "/actuator/health/readiness"
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]' # , {"HTTPS":443}
    # alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/success-codes: "200"
    alb.ingress.kubernetes.io/load-balancer-attributes: "idle_timeout.timeout_seconds=60"
    # alb.ingress.kubernetes.io/conditions.ui: >-
    #   [{"field":"http-header","httpHeaderConfig":{"httpHeaderName": "X-CloudFront-Secret","values":["${CLOUDFRONT_SECRET}"]}}]
    # alb.ingress.kubernetes.io/actions.ui: >-
    #   {"type":"fixed-response","fixedResponseConfig":{"contentType":"text/plain","statusCode":"403","messageBody":"Access denied"}}
    

spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ui
            port:
              number: 80